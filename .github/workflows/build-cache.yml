name: Build toolchains

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  make-caches:
    name: Make caches
    permissions:
      actions: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - android
          - apple
          - mingw
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v29
        with:
          nix_conf: |
            require-sigs = false
      - name: Remove unnecessary packages
        run: | # stolen from https://github.com/easimon/maximize-build-space and https://github.com/actions/runner-images/issues/2840
          echo "=== Before pruning ==="
          df -h
          sudo rm -rf /opt || :
          sudo rm -rf /usr/share/dotnet || :
          sudo rm -rf "/usr/local/share/boost" || :
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || :
          sudo rm -rf /opt/hostedtoolcache/CodeQL || :
          sudo rm -rf /usr/local/lib/android || :
          sudo rm -rf /opt/ghc || :
          sudo docker image prune --all --force || :
          sudo docker builder prune -a || :
          echo
          echo "=== After pruning ==="
          df -h
      - name: Calculate cache hash based on nixpkgs' revision
        run: |
          NIXPKGS_REV=$(nix flake metadata . --json 2>/dev/null | jq --raw-output '.locks.nodes."nixpkgs".locked.rev')
          echo "NIXPKGS_REV=$NIXPKGS_REV" >> "$GITHUB_ENV"
      - uses: actions/cache/restore@v4
        name: Restore persistent cache
        with:
          path: /tmp/nixcache_${{ matrix.arch }}
          key: ${{ runner.os }}-${{ env.NIXPKGS_REV }}-${{ matrix.arch }}
      - name: Save Android toolchain to cache
        if: ${{ matrix.arch == 'android' }}
        run: |
          nix copy --to /tmp/nixcache_${{ matrix.arch }} --inputs-from . --verbose .#forPrebuild.x86_64-linux.arm64-v8a-linux-android
          nix copy --to /tmp/nixcache_${{ matrix.arch }} --inputs-from . --verbose .#forPrebuild.x86_64-linux.armeabi-v7a-linux-android
      - name: Save macOS toolchain to cache
        if: ${{ matrix.arch == 'apple' }}
        run: |
          nix copy --to /tmp/nixcache_${{ matrix.arch }} --inputs-from . --verbose .#forPrebuild.x86_64-linux.x86_64-apple-darwin
          nix copy --to /tmp/nixcache_${{ matrix.arch }} --inputs-from . --verbose .#forPrebuild.x86_64-linux.arm64-apple-darwin
      - name: Save Mingw toolchain to cache
        if: ${{ matrix.arch == 'mingw' }}
        run: |
          nix copy --to /tmp/nixcache_${{ matrix.arch }} --inputs-from . --verbose .#forPrebuild.x86_64-linux.mingw32
          nix copy --to /tmp/nixcache_${{ matrix.arch }} --inputs-from . --verbose .#forPrebuild.x86_64-linux.mingw64
      - uses: actions/cache/save@v4
        name: Save persistent cache
        with:
          path: /tmp/nixcache_${{ matrix.arch }}
          key: ${{ runner.os }}-${{ env.NIXPKGS_REV }}-${{ matrix.arch }}
